[ERROR] ns.foo#A: Operation URI, `/foo`, conflicts with other operation URIs in the same service: [`ns.foo#B` (/foo), `ns.foo#C` (/foo)] | HttpUriConflict
[ERROR] ns.foo#B: Operation URI, `/foo`, conflicts with other operation URIs in the same service: [`ns.foo#A` (/foo), `ns.foo#C` (/foo)] | HttpUriConflict
[ERROR] ns.foo#C: Operation URI, `/foo`, conflicts with other operation URIs in the same service: [`ns.foo#A` (/foo), `ns.foo#B` (/foo)] | HttpUriConflict
[ERROR] ns.foo#D: Operation URI, `/baz`, conflicts with other operation URIs in the same service: [`ns.foo#E` (/baz)] | HttpUriConflict
[ERROR] ns.foo#E: Operation URI, `/baz`, conflicts with other operation URIs in the same service: [`ns.foo#D` (/baz)] | HttpUriConflict
[ERROR] ns.foo#H: Operation URI, `/pattern-match/{Id}`, conflicts with other operation URIs in the same service: [`ns.foo#I` (/pattern-match/{Id}), `ns.foo#J` (/pattern-match/{Id}), `ns.foo#K` (/pattern-match/foo)] | HttpUriConflict
[ERROR] ns.foo#I: Operation URI, `/pattern-match/{Id}`, conflicts with other operation URIs in the same service: [`ns.foo#H` (/pattern-match/{Id}), `ns.foo#J` (/pattern-match/{Id}), `ns.foo#K` (/pattern-match/foo)] | HttpUriConflict
[ERROR] ns.foo#J: Operation URI, `/pattern-match/{Id}`, conflicts with other operation URIs in the same service: [`ns.foo#H` (/pattern-match/{Id}), `ns.foo#I` (/pattern-match/{Id})] | HttpUriConflict
[DANGER] ns.foo#J: Operation URI, `/pattern-match/{Id}`, conflicts with other operation URIs in the same service: [`ns.foo#K` (/pattern-match/foo)]. Pattern traits applied to the label members prevent the label value from evaluating to a conflict, but this is still a poor design. If this is acceptable, this can be suppressed. | HttpUriConflict
[ERROR] ns.foo#K: Operation URI, `/pattern-match/foo`, conflicts with other operation URIs in the same service: [`ns.foo#H` (/pattern-match/{Id}), `ns.foo#I` (/pattern-match/{Id})] | HttpUriConflict
[DANGER] ns.foo#K: Operation URI, `/pattern-match/foo`, conflicts with other operation URIs in the same service: [`ns.foo#J` (/pattern-match/{Id})]. Pattern traits applied to the label members prevent the label value from evaluating to a conflict, but this is still a poor design. If this is acceptable, this can be suppressed. | HttpUriConflict
[DANGER] ns.foo#NestedAllowableConflicts: Operation URI, `/nested/{Id}/bar/baz`, conflicts with other operation URIs in the same service: [`ns.foo#NestedAllowableConflicts2` (/nested/foo/{Id}/baz)]. Pattern traits applied to the label members prevent the label value from evaluating to a conflict, but this is still a poor design. If this is acceptable, this can be suppressed. | HttpUriConflict
[DANGER] ns.foo#NestedAllowableConflicts2: Operation URI, `/nested/foo/{Id}/baz`, conflicts with other operation URIs in the same service: [`ns.foo#NestedAllowableConflicts` (/nested/{Id}/bar/baz)]. Pattern traits applied to the label members prevent the label value from evaluating to a conflict, but this is still a poor design. If this is acceptable, this can be suppressed. | HttpUriConflict
[DANGER] ns.foo#DifferingSegmentEndsConflictChecks: Operation URI, `/differing/{Id}/bar/bam/{OtherId}`, conflicts with other operation URIs in the same service: [`ns.foo#DifferingSegmentEndsConflictChecks2` (/differing/foo/bar/bin/{Id})]. Pattern traits applied to the label members prevent the label value from evaluating to a conflict, but this is still a poor design. If this is acceptable, this can be suppressed. | HttpUriConflict
[DANGER] ns.foo#DifferingSegmentEndsConflictChecks2: Operation URI, `/differing/foo/bar/bin/{Id}`, conflicts with other operation URIs in the same service: [`ns.foo#DifferingSegmentEndsConflictChecks` (/differing/{Id}/bar/bam/{OtherId})]. Pattern traits applied to the label members prevent the label value from evaluating to a conflict, but this is still a poor design. If this is acceptable, this can be suppressed. | HttpUriConflict
[ERROR] ns.foo#ConflictsWithoutPattern: Operation URI, `/no-pattern-conflict/foo`, conflicts with other operation URIs in the same service: [`ns.foo#ConflictsWithoutPattern2` (/no-pattern-conflict/{Id})] | HttpUriConflict
[ERROR] ns.foo#ConflictsWithoutPattern2: Operation URI, `/no-pattern-conflict/{Id}`, conflicts with other operation URIs in the same service: [`ns.foo#ConflictsWithoutPattern` (/no-pattern-conflict/foo)] | HttpUriConflict
[ERROR] ns.foo#LackOfPatternEnablesConflict1: Operation URI, `/double-endpoint-prefix-conflicts`, conflicts with other operation URIs in the same service: [`ns.foo#LackOfPatternEnablesConflict2` (/double-endpoint-prefix-conflicts)] | HttpUriConflict
[ERROR] ns.foo#LackOfPatternEnablesConflict2: Operation URI, `/double-endpoint-prefix-conflicts`, conflicts with other operation URIs in the same service: [`ns.foo#LackOfPatternEnablesConflict1` (/double-endpoint-prefix-conflicts)] | HttpUriConflict
