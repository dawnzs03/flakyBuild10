<?xml version="1.0" encoding="UTF-8"?>
<FindBugsFilter>
    <Match>
        <Class name="~.*\.Immutable.*" />
    </Match>
    <Match>
        <Class name="~.*\.Modifiable.*" />
    </Match>
    <Match>
        <Class name="~.*\.*ConfigImpl" />
    </Match>
    <Match>
        <Class name="~.*\.*ConfigImpl.Builder" />
    </Match>
    <Match>
        <!-- Exclude the generated Protobuf classes -->
        <Package name="~.*.proto" />
    </Match>
    <Match>
        <!-- Exclude the generated collection classes -->
        <Class name="~.*\.Son.*" />
    </Match>

    <!-- Exclude bugs in all test classes except Junit-related bugs -->
    <Match>
        <Class name="~.*\.*Test.*" />
        <Not>
            <Bug code="IJU" />
        </Not>
    </Match>

    <Match>
        <!--
            SeededRandom is used only in tests,
            and we don't particularly care about that rule there
        -->
        <Class name="~.*\.*SeededRandom" />
        <Not>
            <Bug code="DMI_RANDOM_USED_ONLY_ONCE" />
        </Not>
    </Match>

    <!-- Exclude bugs in all benchmark classes -->
    <Match>
        <Or>
            <Class name="~.*\.*Benchmark.*" />
            <Class name="com.neo4j.gds.bench.RunSafely"/>
        </Or>
    </Match>

    <!--
        The following classes are being generated but
        don't match one of the naming patterns from above
    -->
    <Match>
        <Class name="~org.neo4j.gds.NodeProjections?" />
    </Match>
    <Match>
        <Class name="~org.neo4j.gds.RelationshipProjections?" />
    </Match>
    <Match>
        <Class name="~org.neo4j.gds.PropertyMappings" />
    </Match>
    <Match>
        <Class name="~org.neo4j.gds.ConfigWithComponentSizeImpl" />
    </Match>


    <!--
        Below are exclusions of issues found in our project,
        these need to be analysed and enabled on per-issue basis.
        For more details on the issues:
        https://spotbugs.readthedocs.io/en/stable/bugDescriptions.html
    -->

    <!-- Medium priority report -->
    <!-- Method uses the same code for two branches -->
    <Match>
        <Bug pattern="DB_DUPLICATE_BRANCHES"/>
    </Match>

    <!-- Class defines compareTo(...) and uses Object.equals() -->
    <Match>
        <Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS"/>
    </Match>

    <!-- Unread public/protected field -->
    <Match>
        <Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
    </Match>

    <!-- Inconsistent synchronization -->
    <Match>
        <Bug pattern="IS2_INCONSISTENT_SYNC"/>
    </Match>

    <!-- Method does not release lock on all exception paths -->
    <Match>
        <Bug pattern="UL_UNRELEASED_LOCK_EXCEPTION_PATH"/>
    </Match>

    <!-- May expose internal representation by incorporating reference to mutable object -->
    <Match>
        <Bug pattern="EI_EXPOSE_REP2"/>
    </Match>

    <!-- Comparator doesn't implement Serializable -->
    <Match>
        <Bug pattern="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE"/>
    </Match>

    <!-- Method names should start with a lower case letter -->
    <Match>
        <Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
    </Match>

    <!-- Class doesn't override equals in superclass -->
    <Match>
        <Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
    </Match>

    <!-- Rough value of known constant found -->
    <Match>
        <Bug pattern="CNT_ROUGH_CONSTANT_VALUE"/>
    </Match>

    <!-- Useless object created -->
    <Match>
        <Bug pattern="UC_USELESS_OBJECT"/>
    </Match>

    <!-- Field is a mutable collection which should be package protected -->
    <Match>
        <Bug pattern="MS_MUTABLE_COLLECTION_PKGPROTECT"/>
    </Match>

    <!-- May expose internal representation by returning reference to mutable object -->
    <Match>
        <Bug pattern="EI_EXPOSE_REP"/>
    </Match>

    <!-- Return value of method without side effect is ignored -->
    <Match>
        <Bug pattern="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT"/>
    </Match>

    <!-- Unread field: should this field be static? -->
    <Match>
        <Bug pattern="SS_SHOULD_BE_STATIC"/>
    </Match>

    <!-- Unread field -->
    <Match>
        <Bug pattern="URF_UNREAD_FIELD"/>
    </Match>

    <!-- Invocation of equals() on an array, which is equivalent to == -->
    <Match>
        <Bug pattern="EC_BAD_ARRAY_COMPARE"/>
    </Match>

    <!-- Iterator next() method can't throw NoSuchElementException -->
    <Match>
        <Bug pattern="IT_NO_SUCH_ELEMENT"/>
    </Match>

    <!-- Possible null pointer dereference in method on exception path -->
    <Match>
        <Bug pattern="NP_NULL_ON_SOME_PATH_EXCEPTION"/>
    </Match>

    <!-- A volatile reference to an array doesn't treat the array elements as volatile -->
    <Match>
        <Bug pattern="VO_VOLATILE_REFERENCE_TO_ARRAY"/>
    </Match>

    <!-- Method invokes System.exit(...) -->
    <Match>
        <Bug pattern="DM_EXIT"/>
    </Match>

    <!-- Negating the result of compareTo()/compare() -->
    <Match>
        <Bug pattern="RV_NEGATING_RESULT_OF_COMPARETO"/>
    </Match>

    <!-- Uninitialized read of field in constructor -->
    <Match>
        <Bug pattern="UR_UNINIT_READ"/>
    </Match>

    <!-- Exception is caught when Exception is not thrown -->
    <Match>
        <Bug pattern="REC_CATCH_EXCEPTION"/>
    </Match>

    <!-- Useless non-empty void method -->
    <Match>
        <Bug pattern="UC_USELESS_VOID_METHOD"/>
    </Match>

    <!-- Should be a static inner class -->
    <Match>
        <Bug pattern="SIC_INNER_SHOULD_BE_STATIC"/>
    </Match>

    <!-- Field should be moved out of an interface and made package protected -->
    <Match>
        <Bug pattern="MS_OOI_PKGPROTECT"/>
    </Match>

    <!-- Method ignores exceptional return value -->
    <Match>
        <Bug pattern="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE"/>
    </Match>

    <!-- Code contains a hard coded reference to an absolute pathname -->
    <Match>
        <Bug pattern="DMI_HARDCODED_ABSOLUTE_FILENAME"/>
    </Match>

    <!-- Method may fail to clean up stream or resource -->
    <Match>
        <Bug pattern="OBL_UNSATISFIED_OBLIGATION"/>
    </Match>

    <!-- Nullcheck of value previously dereferenced -->
    <Match>
        <Bug pattern="RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE"/>
    </Match>

    <!-- Method may fail to close stream -->
    <Match>
        <Bug pattern="OS_OPEN_STREAM"/>
    </Match>

    <!-- Method allocates an object, only to get the class object -->
    <Match>
        <Bug pattern="DM_NEW_FOR_GETCLASS"/>
    </Match>
    <!-- /Medium priority report -->

    <!-- Low priority report -->

    <!-- Method may fail to close stream on exception -->
    <Match>
        <Bug pattern="OS_OPEN_STREAM_EXCEPTION_PATH"/>
    </Match>

    <!-- Non-serializable class has a serializable inner class -->
    <Match>
        <Bug pattern="SE_BAD_FIELD_INNER_CLASS"/>
    </Match>

    <!-- Method calls static Math class method on a constant value -->
    <Match>
        <Bug pattern="UM_UNNECESSARY_MATH"/>
    </Match>

    <!-- Confusing method names -->
    <Match>
        <Bug pattern="NM_CONFUSING"/>
    </Match>

    <!-- Class is Serializable, but doesn't define serialVersionUID -->
    <Match>
        <Bug pattern="SE_NO_SERIALVERSIONID"/>
    </Match>

    <!-- Consider returning a zero length array rather than null -->
    <Match>
        <Bug pattern="PZLA_PREFER_ZERO_LENGTH_ARRAYS"/>
    </Match>

    <!-- Unchecked/unconfirmed cast of return value from method -->
    <Match>
        <Bug pattern="BC_UNCONFIRMED_CAST_OF_RETURN_VALUE"/>
    </Match>

    <!-- Unchecked/unconfirmed cast -->
    <Match>
        <Bug pattern="BC_UNCONFIRMED_CAST"/>
    </Match>

    <!-- Redundant nullcheck of value known to be non-null -->
    <Match>
        <Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
    </Match>

    <!-- Test for floating point equality -->
    <Match>
        <Bug pattern="FE_FLOATING_POINT_EQUALITY"/>
    </Match>

    <!-- Using floating-point variables should not be used as loop counters -->
    <Match>
        <Bug pattern="FL_FLOATS_AS_LOOP_COUNTERS" />
    </Match>

    <!-- Non-transient non-serializable instance field in serializable class -->
    <Match>
        <Bug pattern="SE_BAD_FIELD"/>
    </Match>

    <!-- Field not initialized in constructor but dereferenced without null check -->
    <Match>
        <Bug pattern="UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR"/>
    </Match>

    <!-- Method might ignore exception -->
    <Match>
        <Bug pattern="DE_MIGHT_IGNORE"/>
    </Match>

    <!-- Consider using Locale parameterized version of invoked method -->
    <Match>
        <Bug pattern="DM_CONVERT_CASE"/>
    </Match>

    <!-- Could be refactored into a named static inner class -->
    <Match>
        <Bug pattern="SIC_INNER_SHOULD_BE_STATIC_ANON"/>
    </Match>

    <!-- Class implements same interface as superclass -->
    <Match>
        <Bug pattern="RI_REDUNDANT_INTERFACES"/>
    </Match>

    <!-- Private method is never called -->
    <Match>
        <Bug pattern="UPM_UNCALLED_PRIVATE_METHOD"/>
    </Match>

    <!-- Method invoked that should be only be invoked inside a doPrivileged block -->
    <Match>
        <Bug pattern="DP_DO_INSIDE_DO_PRIVILEGED"/>
    </Match>
    <!-- /Low priority report -->

    <Match>
        <Bug pattern="UWF_NULL_FIELD"/>
    </Match>

    <Match>
        <Bug pattern="RV_RETURN_VALUE_IGNORED"/>
    </Match>

    <!-- Exclusions for rules defined in SpotBugs extension fb-contrib -->
    <!-- See https://github.com/mebigfatguy/fb-contrib -->

    <Match>
        <Bug pattern="AI_ANNOTATION_ISSUES_NEEDS_NULLABLE"/>
    </Match>
    <Match>
        <Source name="~.*_jcstress.java$"/>
    </Match>
    <Match>
        <Bug pattern="BL_BURYING_LOGIC"/>
    </Match>
    <Match>
        <Bug pattern="CFS_CONFUSING_FUNCTION_SEMANTICS"/>
    </Match>
    <Match>
        <Bug pattern="CNC_COLLECTION_NAMING_CONFUSION"/>
    </Match>
    <Match>
        <Bug pattern="DLC_DUBIOUS_LIST_COLLECTION"/>
    </Match>
    <Match>
        <Bug pattern="DMC_DUBIOUS_MAP_COLLECTION"/>
    </Match>
    <Match>
        <Bug pattern="DRE_DECLARED_RUNTIME_EXCEPTION"/>
    </Match>
    <Match>
        <Bug pattern="EXS_EXCEPTION_SOFTENING_NO_CHECKED"/>
    </Match>
    <Match>
        <Bug pattern="EXS_EXCEPTION_SOFTENING_HAS_CHECKED"/>
    </Match>
    <Match>
        <Bug pattern="EXS_EXCEPTION_SOFTENING_NO_CONSTRAINTS"/>
    </Match>
    <Match>
        <Bug pattern="FCCD_FIND_CLASS_CIRCULAR_DEPENDENCY"/>
    </Match>
    <Match>
        <Bug pattern="FII_USE_METHOD_REFERENCE"/>
    </Match>
    <Match>
        <Bug pattern="FII_USE_FUNCTION_IDENTITY"/>
    </Match>
    <Match>
        <Bug pattern="FII_COMBINE_FILTERS"/>
    </Match>
    <Match>
        <Bug pattern="FPL_FLOATING_POINT_LOOPS"/>
    </Match>
    <Match>
        <Bug pattern="HES_EXECUTOR_OVERWRITTEN_WITHOUT_SHUTDOWN"/>
    </Match>
    <Match>
        <Bug pattern="HES_EXECUTOR_NEVER_SHUTDOWN"/>
    </Match>
    <Match>
        <Bug pattern="IMC_IMMATURE_CLASS_BAD_SERIALVERSIONUID"/>
    </Match>
    <Match>
        <Bug pattern="IMC_IMMATURE_CLASS_NO_TOSTRING"/>
    </Match>
    <Match>
        <Bug pattern="IMC_IMMATURE_CLASS_NO_EQUALS"/>
    </Match>
    <Match>
        <Bug pattern="IMC_IMMATURE_CLASS_WRONG_FIELD_ORDER"/>
    </Match>
    <Match>
        <Bug pattern="ITC_INHERITANCE_TYPE_CHECKING"/>
    </Match>
    <Match>
        <Bug pattern="LEST_LOST_EXCEPTION_STACK_TRACE"/>
    </Match>
    <Match>
        <Bug pattern="LSC_LITERAL_STRING_COMPARISON"/>
    </Match>
    <Match>
        <Bug pattern="LUI_USE_GET0"/>
    </Match>
    <Match>
        <Bug pattern="MDM_RANDOM_SEED"/>
    </Match>
    <Match>
        <Bug pattern="MDM_WAIT_WITHOUT_TIMEOUT"/>
    </Match>
    <Match>
        <Bug pattern="MDM_LOCK_ISLOCKED"/>
    </Match>
    <Match>
        <Bug pattern="MOM_MISLEADING_OVERLOAD_MODEL"/>
    </Match>
    <Match>
        <Bug pattern="MRC_METHOD_RETURNS_CONSTANT"/>
    </Match>
    <Match>
        <Bug pattern="MUI_CALLING_SIZE_ON_SUBCONTAINER"/>
    </Match>
    <Match>
        <Bug pattern="MUI_CONTAINSKEY_BEFORE_GET"/>
    </Match>
    <Match>
        <Bug pattern="NAB_NEEDLESS_BOXING_VALUEOF"/>
    </Match>
    <Match>
        <Bug pattern="NAB_NEEDLESS_BOX_TO_CAST"/>
    </Match>
    <Match>
        <Bug pattern="NAB_NEEDLESS_BOOLEAN_CONSTANT_CONVERSION"/>
    </Match>
    <Match>
        <Bug pattern="OCP_OVERLY_CONCRETE_PARAMETER"/>
    </Match>
    <Match>
        <Bug pattern="OI_OPTIONAL_ISSUES_PRIMITIVE_VARIANT_PREFERRED"/>
    </Match>
    <Match>
        <Bug pattern="OI_OPTIONAL_ISSUES_USES_IMMEDIATE_EXECUTION"/>
    </Match>
    <Match>
        <Bug pattern="OPM_OVERLY_PERMISSIVE_METHOD"/>
    </Match>
    <Match>
        <Bug pattern="PCOA_PARTIALLY_CONSTRUCTED_OBJECT_ACCESS"/>
    </Match>
    <Match>
        <Bug pattern="PDP_POORLY_DEFINED_PARAMETER"/>
    </Match>
    <Match>
        <Bug pattern="PL_PARALLEL_LISTS"/>
    </Match>
    <Match>
        <Bug pattern="PMB_INSTANCE_BASED_THREAD_LOCAL"/>
    </Match>
    <Match>
        <Bug pattern="PME_POOR_MANS_ENUM"/>
    </Match>
    <Match>
        <Bug pattern="PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS"/>
    </Match>
    <Match>
        <Bug pattern="PSC_PRESIZE_COLLECTIONS"/>
    </Match>
    <Match>
        <Bug pattern="SCII_SPOILED_CHILD_INTERFACE_IMPLEMENTOR"/>
    </Match>
    <Match>
        <Bug pattern="SEO_SUBOPTIMAL_EXPRESSION_ORDER"/>
    </Match>
    <Match>
        <Bug pattern="SUA_SUSPICIOUS_UNINITIALIZED_ARRAY"/>
    </Match>
    <Match>
        <Bug pattern="UMTP_UNBOUND_METHOD_TEMPLATE_PARAMETER"/>
    </Match>
    <Match>
        <Bug pattern="UP_UNUSED_PARAMETER"/>
    </Match>
    <Match>
        <Bug pattern="URV_CHANGE_RETURN_TYPE"/>
    </Match>
    <Match>
        <Bug pattern="USBR_UNNECESSARY_STORE_BEFORE_RETURN"/>
    </Match>
    <Match>
        <Bug pattern="UVA_USE_VAR_ARGS"/>
    </Match>
    <Match>
        <Bug pattern="WEM_WEAK_EXCEPTION_MESSAGING"/>
    </Match>
    <Match>
        <Bug pattern="CE_CLASS_ENVY"/>
    </Match>
    <Match>
        <Bug pattern="CLI_CONSTANT_LIST_INDEX"/>
    </Match>
    <Match>
        <Bug pattern="FCBL_FIELD_COULD_BE_LOCAL"/>
    </Match>
    <Match>
        <Bug pattern="HES_LOCAL_EXECUTOR_SERVICE"/>
    </Match>
    <Match>
        <Bug pattern="IICU_INCORRECT_INTERNAL_CLASS_USE"/>
    </Match>
    <Match>
        <Bug pattern="MDM_THREAD_YIELD"/>
    </Match>
    <Match>
        <Bug pattern="RFI_SET_ACCESSIBLE"/>
    </Match>
    <Match>
        <Bug pattern="SACM_STATIC_ARRAY_CREATED_IN_METHOD"/>
    </Match>
    <Match>
        <Bug pattern="SEC_SIDE_EFFECT_CONSTRUCTOR"/>
    </Match>
    <Match>
        <Bug pattern="SPP_USE_MATH_CONSTANT"/>
    </Match>
    <Match>
        <Bug pattern="NOS_NON_OWNED_SYNCHRONIZATION"/>
    </Match>
    <Match>
        <Bug pattern="NSE_NON_SYMMETRIC_EQUALS"/>
    </Match>
    <Match>
        <Bug pattern="PCAIL_POSSIBLE_CONSTANT_ALLOCATION_IN_LOOP"/>
    </Match>
    <Match>
        <Bug pattern="SNG_SUSPICIOUS_NULL_FIELD_GUARD"/>
    </Match>
    <Match>
        <Bug pattern="STT_TOSTRING_STORED_IN_FIELD"/>
    </Match>
    <Match>
        <Bug pattern="TR_TAIL_RECURSION"/>
    </Match>
    <Match>
        <Bug pattern="ACEM_ABSTRACT_CLASS_EMPTY_METHODS"/>
    </Match>
    <Match>
        <Bug pattern="IMC_IMMATURE_CLASS_UPPER_PACKAGE"/>
    </Match>
    <Match>
        <Bug pattern="ISB_TOSTRING_APPENDING"/>
    </Match>
    <Match>
        <Bug pattern="LII_LIST_INDEXED_ITERATING"/>
    </Match>
    <Match>
        <Bug pattern="LUI_USE_SINGLETON_LIST"/>
    </Match>
    <Match>
        <Bug pattern="SPP_USE_ISEMPTY"/>
    </Match>
    <Match>
        <Bug pattern="IMC_IMMATURE_CLASS_PRINTSTACKTRACE"/>
    </Match>
    <Match>
        <Bug pattern="LO_EMBEDDED_SIMPLE_STRING_FORMAT_IN_FORMAT_STRING"/>
    </Match>
    <Match>
        <Bug pattern="UAC_UNNECESSARY_API_CONVERSION_FILE_TO_PATH"/>
    </Match>
    <Match>
        <Bug pattern="PMB_POSSIBLE_MEMORY_BLOAT"/>
    </Match>
    <Match>
        <Bug pattern="WOC_WRITE_ONLY_COLLECTION_FIELD"/>
    </Match>
    <Match>
        <Bug pattern="STT_STRING_PARSING_A_FIELD"/>
    </Match>
    <Match>
        <Bug pattern="UCC_UNRELATED_COLLECTION_CONTENTS"/>
    </Match>
    <Match>
        <Bug pattern="WOC_WRITE_ONLY_COLLECTION_LOCAL"/>
    </Match>
    <Match>
        <Bug pattern="URV_UNRELATED_RETURN_VALUES"/>
    </Match>
    <Match>
        <Bug pattern="OC_OVERZEALOUS_CASTING"/>
    </Match>
    <Match>
        <Bug pattern="EXS_EXCEPTION_SOFTENING_RETURN_FALSE"/>
    </Match>
    <Match>
        <Bug pattern="LO_STUTTERED_MESSAGE"/>
    </Match>
    <Match>
        <Bug pattern="IOI_USE_OF_FILE_STREAM_CONSTRUCTORS"/>
    </Match>
    <Match>
        <Bug pattern="COM_COPIED_OVERRIDDEN_METHOD"/>
    </Match>
    <Match>
        <Bug pattern="MDM_INETADDRESS_GETLOCALHOST"/>
    </Match>
    <Match>
        <Bug pattern="SSCU_SUSPICIOUS_SHADED_CLASS_USE"/>
    </Match>

    <!-- This is a required pattern for e.g. the Arrow flight producer -->
    <Match>
        <Bug pattern="THROWS_METHOD_THROWS_RUNTIMEEXCEPTION"/>
    </Match>
    <!-- Classes where throwing an Exception is the only option -->
    <Match>
        <Bug pattern="THROWS_METHOD_THROWS_CLAUSE_BASIC_EXCEPTION"/>
    </Match>

    <!-- Calling an overridable method in a constructor may result in the use of uninitialized data. -->
    <Match>
        <Bug pattern="MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR"/>
    </Match>

    <!-- Exposing internal structure is fine for the following cases -->
    <Match>
        <Or>
            <Class name="org.neo4j.gds.core.utils.progress.EmptyTaskStore" />
            <Class name="org.neo4j.gds.core.utils.warnings.EmptyUserLogStore" />
            <Class name="org.neo4j.gds.NodeProjection" />
        </Or>
        <Bug code="MS" />
    </Match>

    <Match>
        <Bug pattern="CC_CYCLOMATIC_COMPLEXITY"/>
    </Match>

    <!-- This rule did find enums with more than one value -->
    <Match>
        <Bug pattern="ENMI_ONE_ENUM_VALUE"/>
    </Match>

    <Match>
        <Bug pattern="ENMI_NULL_ENUM_VALUE"/>
    </Match>

    <Match>
        <Bug pattern="SPP_PASSING_THIS_AS_PARM"/>
    </Match>

    <!--
        Match for specific rules in specific classes
    -->
</FindBugsFilter>
