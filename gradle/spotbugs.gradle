def shouldSpotbugs = !project.hasProperty('no-spotbugs')

if (shouldSpotbugs) {
    allprojects { proj ->

        plugins.withType(JavaLibraryPlugin) {

            proj.apply plugin: 'com.github.spotbugs'

            proj.spotbugs {
                toolVersion = ver.spotbugsToolVersion
                effort = 'less'
                reportLevel = 'low'

                onlyAnalyze = [ 'org.neo4j.gds.*', 'com.neo4j.gds.*' ]
                omitVisitors = ['FindSqlInjection', 'FindNonShortCircuit']

                // When  `ignoreFailures=false` the build will be failing on spotbugs errors
                ignoreFailures = false
                showStackTraces = false
                showProgress = false

                excludeFilter = file("$publicDir/etc/spotbugs/spotbugs-exclude.xml")

                dependencies {
                    spotbugsPlugins(group: 'com.mebigfatguy.sb-contrib', name: 'sb-contrib', version: ver.'sb-contrib') { transitive = false }
                }
            }

            proj.tasks.withType(SpotBugsTask) {
                proj.tasks.spotbugs.dependsOn(it)

                def taskName = it.name
                it.reports {
                    html {
                        // Due to a known issue with SpotBugs, HTML and XML reports cannot be generated both at the same time.
                        enabled = true
                        destination = file("${spotbugsReportsDir}/html/${taskName}/${proj.name}.html")
                    }
                    xml {
                        enabled = false
                        destination = file("${spotbugsReportsDir}/xml/${taskName}/${proj.name}.xml")
                    }
                }
            }
        }
    }
}
